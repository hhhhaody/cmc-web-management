<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.ProductOperationMapper">
    <update id="update">
        update product_operation
        <set>
            <if test="quality != null and quality != ''">
                quality = #{quality},
            </if>
            <if test="operator != null and operator != ''">
                operator = #{operator},
            </if>
            <if test="amount != null">
                amount = #{amount},
            </if>
            <if test="produceTime != null">
                produceTime = #{produceTime},
            </if>
            <if test="receipt != null and receipt != ''">
                receipt = #{receipt},
            </if>
            <if test="detail != null and detail != ''">
                detail = #{detail},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="list" resultType="com.example.pojo.ProductOperation">
        select *
        from product_operation
        <where>
            <if test="operation != null and operation != ''">
                operation = #{operation}
            </if>
            <if test="name != null and name != ''">
                name like concat('%', #{name}, '%')
            </if>
            <if test="spec != null and spec != ''">
                and spec like concat('%', #{spec}, '%')
            </if>
            <if test="operator != null and operator != ''">
                and operator like concat('%', #{operator}, '%')
            </if>
            <if test="quality != null and quality != ''">
                and quality like concat('%', #{quality}, '%')
            </if>
            <if test="operateTimeStart != null and operateTimeEnd != null">
                and operateTime between #{operateTimeStart} and #{operateTimeEnd}
            </if>
        </where>
        Order by operateTime desc
    </select>
    <select id="search" resultType="com.example.pojo.Value">
        select distinct ${field} as value from product_operation
        <where>
            batch IN (
            SELECT batch
            FROM product_operation
            GROUP BY batch
            HAVING SUM(CASE WHEN operation = '入库' THEN amount ELSE 0 END) > SUM(CASE WHEN operation != '入库' THEN amount
            ELSE 0 END)
            )
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="spec != null and spec != ''">
                and spec = #{spec}
            </if>
            <if test="batch != null and batch != ''">
                and batch = #{batch}
            </if>
        </where>
        order by value
    </select>
    <select id="getByBatch" resultType="com.example.pojo.ProductOperation">
        SELECT id,
               name,
               spec,
               produceTime,
               quality,
               operation,
               operateTime,
               operator,
               receipt,
               batch,
               detail,
               (SELECT SUM(CASE WHEN operation = '入库' THEN amount ELSE -amount END)
                FROM product_operation
                WHERE batch = mo.batch) AS amount
        FROM product_operation AS mo
        WHERE mo.batch = #{batch}
          and operation = '入库';
    </select>
</mapper>